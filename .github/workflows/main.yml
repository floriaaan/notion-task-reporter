name: Notion TR - test, build, package

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Test
        run: pnpm test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
    #   - uses: actions/upload-artifact@v3
    #     with:
    #       name: build-${{ github.sha }}
    #       path: dist/index.js
    #       retention-days: 1

  package:
    # depends on build to get the artifact - DISABLED
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Package using pkg
        id: pkg
        run: pnpm run pkg
      - name: Create Release
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { repo: { owner, repo }, sha } = context;
            const fs = require('fs').promises;

            const release = await github.rest.repos.createRelease({
              owner, repo,
              tag_name: `nightly-${sha.slice(0, 7)}`,
            });

            const binaries = await fs.readdir('./bin');
            for (let file of binaries) {
              console.log('uploading', file);

              await github.rest.repos.uploadReleaseAsset({
                owner, repo,
                release_id: release.data.id,
                name: file,
                data: await fs.readFile(`./bin/${file}`)
              });            
            }
